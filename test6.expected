open misc
open util/integer

pred true { no none }
pred false { some none }

one sig State {
 x : Int
}
one sig Const {
 X : Int
}
assert allguards_3_6 {
(State.x = Const.X => (true or (true or false)))
}
check allguards_3_6

assert guard_3_6 {
(State.x = Const.X => (true => (State.x.negate).(abs) = (Const.X).(abs)))
}
check guard_3_6

assert guard_4_6 {
(State.x = Const.X => (true => (State.x).(abs) = (Const.X).(abs)))
}
check guard_4_6

